@using EMPManegment.Web.Models
@model IEnumerable<EMPManegment.EntityModels.ViewModels.TaskModels.TaskDetailsView>
@inject UserSession _userSession


@foreach (var item in Model)
{
    var imageUrl = !string.IsNullOrEmpty(item.UserProfile) ? Url.Content($"~/{item.UserProfile}") : null;
    var initials = (!string.IsNullOrEmpty(item.FirstName) && !string.IsNullOrEmpty(item.LastName)) ? $"{item.FirstName[0]}{item.LastName[0]}".ToUpper() : null;

    <div class="acitivity-item d-flex">
        <div class="flex-shrink-0">
            @if (!string.IsNullOrEmpty(imageUrl))
            {
                <img class="direct-chat-img" src="@imageUrl" alt="user image">
            }
            else
            {
                <div class="flex-shrink-0 avatar-xs me-2">
                    <div class="avatar-title bg-success-subtle text-success rounded-circle fs-13" style="height:40px;width:40px;">@initials</div>
                </div>
            }
        </div>
        <div class="flex-grow-1 ms-3">
            <h6 class="mb-1">
                @item.TaskTitle
                @if (item.TaskStatus == "Working")
                {
                    <a class="badge bg-warning text-uppercase">@item.TaskStatus</a>
                }
                else if (item.TaskStatus == "Completed")
                {
                    <a class="badge bg-success text-uppercase">@item.TaskStatus</a>
                }
                else if (item.TaskStatus == "Pending")
                {
                    <a class="badge  bg-primary  text-uppercase">@item.TaskStatus</a>
                }
                else if (item.TaskStatus == "InReview")
                {
                    <a class="badge  bg-secondary text-uppercase">@item.TaskStatus</a>
                }
                else
                {
                    <a class="badge  bg-secondary text-uppercase">@item.TaskStatus</a>
                }
            </h6>
            <p class="text-muted mb-2">@item.TaskDetails</p>
            <small class="mb-0 text-muted">@item.UpdatedOn</small>
        </div>
    </div>
}