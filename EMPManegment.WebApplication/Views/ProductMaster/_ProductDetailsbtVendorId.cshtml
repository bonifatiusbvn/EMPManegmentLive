@model IPagedList<EMPManegment.EntityModels.ViewModels.ProductMaster.ProductDetailsView>
@using EMPManegment.Web.Models
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common
@inject IHttpContextAccessor Accessor;
@inject UserSession _userSession;

<div class="card-body">
    <div class="table-responsive table-card mb-1">
        <table role="grid" class="gridjs-table border" style="height: auto;">
            <thead class="gridjs-thead">
                <tr class="gridjs-tr">
                    <th data-column-id="product" class="gridjs-th gridjs-th-sort text-muted" tabindex="0" style="width: 360px;">
                        <div class="gridjs-th-content">Product</div>
                        <button tabindex="-1" aria-label="Sort column ascending" title="Sort column ascending" class="gridjs-sort gridjs-sort-desc"></button>
                    </th>
                    <th data-column-id="price" class="gridjs-th gridjs-th-sort text-muted" tabindex="0" style="width: 101px;">
                        <div class="gridjs-th-content">Price</div>
                        <button tabindex="-1" aria-label="Sort column ascending" title="Sort column ascending" class="gridjs-sort gridjs-sort-neutral"></button>
                    </th>
                    <th data-column-id="action" class="gridjs-th gridjs-th-sort text-muted" tabindex="0" style="width: 80px;">
                        <div class="gridjs-th-content">Action</div>
                        <button tabindex="-1" aria-label="Sort column ascending" title="Sort column ascending" class="gridjs-sort gridjs-sort-neutral"></button>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-column-id="product">
                            <span>
                                <div class="d-flex align-items-center">
                                    <div class="flex-shrink-0 me-3">
                                        <div class="avatar-sm bg-light rounded p-1">
                                            <img src="~/@item.ProductImage" alt="" class="img-fluid d-block">
                                        </div>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h5 class="fs-14 mb-1">
                                            <a href="apps-ecommerce-product-details.html" class="text-body">@item.ProductName</a>
                                        </h5>
                                        <p class="text-muted mb-0">Category : <span class="fw-medium">@item.ProductTypeName</span></p>
                                        <p class="text-muted mb-0">Details : <span class="fw-medium">@item.ProductShortDescription</span></p>
                                    </div>
                                </div>
                            </span>
                        </td>
                        <td data-column-id="price" class="gridjs-td">₹<span>@item.PerUnitPrice</span></td>
                        @if (UserSession.FormPermisionData.Any(a => a.FormName == "Product List" && (a.Edit == true || a.Delete == true)))
                        {
                            <td data-column-id="action">
                                @if (UserSession.FormPermisionData.Any(a => a.FormName == "Product List" && a.Edit == true))
                                {
                                    <a href="#showModal" onclick="EditProductDetails('@item.Id')" data-bs-toggle="modal" class="text-primary d-inline-block edit-item-btn">
                                        <i class="fa-regular fa-pen-to-square"></i>
                                    </a>
                                }
                                @if (UserSession.FormPermisionData.Any(a => a.FormName == "Product List" && a.Delete == true))
                                {
                                    <a href="#showModal" onclick="DeleteProductDetails('@item.Id')" data-bs-toggle="modal" class="btn text-danger d-inline-block remove-item-btn">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("GetAllProductList", new
    {
        page,
        searchText = ViewBag.SearchText
    }),
                new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })

<script>
    $(document).ready(function () {
    @if (TempData["EmptyProductList"] != null)
    {
        <text>
                toastr.warning("@TempData["EmptyProductList"]");
        </text>
    }
                });
</script>
