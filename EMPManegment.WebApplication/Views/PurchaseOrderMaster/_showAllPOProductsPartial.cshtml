@model IEnumerable<EMPManegment.EntityModels.ViewModels.ProductMaster.ProductDetailsView>
@using EMPManegment.Web.Models
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@inject IHttpContextAccessor Accessor
@inject UserSession _userSession

<div class="card-body">
    <div class="table-responsive table-card">
        <table class="table table-borderless align-middle mb-0" id="productTable">
            <thead class="table-light text-muted">
                <tr>
                    <th style="width: 90px;" scope="col">Product</th>
                    <th scope="col">Product Info</th>
                    <th scope="col" class="text-end">Add</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <div class="avatar-md bg-light rounded p-1">
                                <img src="~/@item.ProductImage" alt="" class="img-fluid d-block">
                            </div>
                        </td>
                        <td>
                            <h5 class="fs-14">
                                @item.ProductName
                            </h5>
                            <p class="text-muted mb-0">@item.PerUnitPrice</p>
                        </td>
                        <td class="text-end"><a id="addItemButton" class="btn btn-warning" onclick="fn_SearchPOProductDetailsById('@item.Id')"><i class="ri-add-line align-bottom me-1"></i>Add</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@Html.PagedListPager((IPagedList)Model, page => Url.Action("GetAllPOProductList", new
    {
        page = page,
        searchfor = @Context.Request.Query["searchfor"]
    }),
                new X.PagedList.Web.Common.PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
